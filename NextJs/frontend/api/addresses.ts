import { apiRequest } from "./index"; // –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –∏–º–ø–æ—Ä—Ç
import type { Address } from "@/types"; // —Ç–∏–ø—ã –±–µ—Ä—ë–º –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö

// ------------------------------------------------------
// üì¨ –ó–∞–ø—Ä–æ—Å—ã –∫ API (–∞–¥—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
// ------------------------------------------------------

// –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function getAddresses(): Promise<Address[]> {
  return apiRequest<Address[]>("/addresses/", {
    method: "GET",
  });
}

// –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å
export type CreateAddressBody = Omit<Address, "id">;

export async function createAddress(body: CreateAddressBody): Promise<Address> {
  return apiRequest<Address>("/addresses/", {
    method: "POST",
    body: JSON.stringify(body),
  });
}

// –û–±–Ω–æ–≤–∏—Ç—å –∞–¥—Ä–µ—Å –ø–æ ID
export async function updateAddress(
  id: number,
  body: Partial<CreateAddressBody>
): Promise<Address> {
  return apiRequest<Address>(`/addresses/${id}/`, {
    method: "PUT",
    body: JSON.stringify(body),
  });
}

// –£–¥–∞–ª–∏—Ç—å –∞–¥—Ä–µ—Å –ø–æ ID
export async function deleteAddress(id: number): Promise<void> {
  await apiRequest<void>(`/addresses/${id}/`, {
    method: "DELETE",
  });
}
